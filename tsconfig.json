{
  "compilerOptions": {
    "baseUrl": "./",
    "paths": {
      "src/*": ["./src/*"],
      "root/*": ["./*"]
    },
    "outDir": ".",
    "module": "esnext",
    "target": "es5",
    "lib": [
      "esnext",
      "dom"
    ],

    "jsx": "react", // 指定jsx代码生成方式，可选preserve | react | react-native
    "allowJs": true, // 允许编译JavaScript文件
    "checkJs": false, // 检查JavaScript文件中的错误

    "noEmitOnError": true, // ensure the process breaks if an error is encountered
    "sourceMap": true, // 生成响应的.map文件用于调试

    /* 额外检查 */
    "noUnusedLocals": true, // 不允许未使用的局部变量
    "noUnusedParameters": true, // 不允许有未使用的参数
    "suppressImplicitAnyIndexErrors": true, // 阻止 --noImplicitAny对缺少索引签名的索引对象报错。

    /* 模块解析选项 */
    "moduleResolution": "node",

    /* 严格的类型检查选项 */
    "strict": true,                        // 启用所有严格类型检查选项
    "noImplicitAny": true,                 // 在表达式和声明上有隐含的 any类型时报错
    "strictNullChecks": true,              // 启用严格的 null 检查
    "noImplicitThis": true,                // 当 this 表达式值为 any 类型的时候，生成一个错误
    "alwaysStrict": true,                  // 以严格模式检查每个模块，并在每个文件里加入 'use strict'

    "importHelpers": true, // 从 tslib 导入辅助工具函数
    "forceConsistentCasingInFileNames": true, // 禁止对同一个文件的不一致的引用。
    "removeComments": true, // 删除所有注释，除了以 /!*开头的版权信息。
    "esModuleInterop": true, // 可调用的CommonJS模块必须被做为默认导入
    "experimentalDecorators": true, // 启用实验性的ES装饰器

    "allowSyntheticDefaultImports": true, // 允许从没有设置默认导出的模块中默认导入。这并不影响代码的输出，仅为了类型检查。
    "skipLibCheck": true
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx"
  ],
  "exclude": [
    "node_modules",
    "cjs",
    "es"
  ]
}
